create type game_status as enum ('pending', 'started', 'complete');

create table games (
  id bigint generated by default as identity primary key,
  status game_status default 'pending' not null,
  board text not null default '000000000',
  last_played int not null default 1,
  winner int
);

-- To listen to status and board updates
alter publication supabase_realtime add table public.games;

-- Function to check if there is a winner and end the game
create function check_winner()
returns trigger as $$
begin
    -- check rows, columns and diagonals for a win
    if substring(new.board, 1, 1) = '1' and substring(new.board, 2, 1) = '1' and substring(new.board, 3, 1) = '1' or
       substring(new.board, 4, 1) = '1' and substring(new.board, 5, 1) = '1' and substring(new.board, 6, 1) = '1' or
       substring(new.board, 7, 1) = '1' and substring(new.board, 8, 1) = '1' and substring(new.board, 9, 1) = '1' or
       substring(new.board, 1, 1) = '1' and substring(new.board, 4, 1) = '1' and substring(new.board, 7, 1) = '1' or
       substring(new.board, 2, 1) = '1' and substring(new.board, 5, 1) = '1' and substring(new.board, 8, 1) = '1' or
       substring(new.board, 3, 1) = '1' and substring(new.board, 6, 1) = '1' and substring(new.board, 9, 1) = '1' or
       substring(new.board, 1, 1) = '1' and substring(new.board, 5, 1) = '1' and substring(new.board, 9, 1) = '1' or
       substring(new.board, 3, 1) = '1' and substring(new.board, 5, 1) = '1' and substring(new.board, 7, 1) = '1' then
        update games set status = 'complete', winner = 1 where id = new.id;
        return new;
    end if;

    if substring(new.board, 1, 1) = '2' and substring(new.board, 2, 1) = '2' and substring(new.board, 3, 1) = '2' or
       substring(new.board, 4, 1) = '2' and substring(new.board, 5, 1) = '2' and substring(new.board, 6, 1) = '2' or
       substring(new.board, 7, 1) = '2' and substring(new.board, 8, 1) = '2' and substring(new.board, 9, 1) = '2' or
       substring(new.board, 1, 1) = '2' and substring(new.board, 4, 1) = '2' and substring(new.board, 7, 1) = '2' or
       substring(new.board, 2, 1) = '2' and substring(new.board, 5, 1) = '2' and substring(new.board, 8, 1) = '2' or
       substring(new.board, 3, 1) = '2' and substring(new.board, 6, 1) = '2' and substring(new.board, 9, 1) = '2' or
       substring(new.board, 1, 1) = '2' and substring(new.board, 5, 1) = '2' and substring(new.board, 9, 1) = '2' or
       substring(new.board, 3, 1) = '2' and substring(new.board, 5, 1) = '2' and substring(new.board, 7, 1) = '2' then
        update games set status = 'complete', winner = 2 where id = new.id;
        return new;
    end if;

    -- check if the board has no zeroes indicating a full board
    if position('0' in new.board) = 0 then
        update games set status = 'complete' where id = new.id;
    end if;

    return new;
end;
$$ language plpgsql;

-- Trigger check winner function after each board update
create trigger trigger_check_winner
after update of board on games
for each row
execute function check_winner();